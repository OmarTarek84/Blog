{"version":3,"sources":["../node_modules/engine.io-parser/lib/browser.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/engine.io-client/node_modules/component-emitter/index.js","../node_modules/socket.io-client/lib/index.js","../node_modules/parseuri/index.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/node_modules/component-emitter/index.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/debug.js","../node_modules/socket.io-client/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/socket.io-parser/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/component-emitter/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/debug.js","../node_modules/engine.io-client/node_modules/ms/index.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["base64encoder","keys","__webpack_require__","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","exports","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","i","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","apply","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","process","load","r","storage","debug","Object","NODE_ENV","PUBLIC_URL","DEBUG","module","log","console","Function","prototype","call","arguments","formatArgs","args","useColors","this","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","enable","obj","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","fn","constructor","Emitter","binary","isArray","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","emit","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","self","concat","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","slice","listeners","hasListeners","url","Manager","lookup","cache","managers","uri","io","parsed","source","sameNamespace","nsps","forceNew","multiplex","connect","Socket","re","parts","src","indexOf","m","exec","host","authority","ipv6uri","arr","Buffer","withNativeBuffer","isBuffer","withNativeArrayBuffer","isView","eio","bind","Backoff","has","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","toJSON","prev","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","parseuri","loc","href","createDebug","prevTime","enabled","curr","ms","coerce","format","formatter","val","hash","abs","selectColor","init","instances","stack","disable","names","skips","instance","s","h","d","y","plural","ceil","parseFloat","isNaN","long","round","fmtShort","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","product","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","create","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","response","attachEvent","unloadHandler","terminationEvent","arraybuffer","start","end","bytes","abv","ii","count","err_cb","bail","proxy","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","value","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","array","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","part","BlobConstructor","global","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"static/js/1.de0ddefd.chunk.js","sourcesContent":["/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n} else {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}
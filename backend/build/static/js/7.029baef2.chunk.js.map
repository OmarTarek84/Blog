{"version":3,"sources":["Components/EditProfileModal/EditProfileModal.js","Components/Backdrop/Backdrop.js","Components/Form/Form.js","hoc/Error.js","assets/avatar.jpg","Components/UserProfile/UserProfile.js","Containers/UserProfile/UserProfile.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","profileModal","props","a","createElement","className","children","backdrop","show","onClick","clicked","form","errorMessage","element","classes","touched","invalid","push","invalidN","elementType","Fragment","Object","assign","value","elementConfig","onChange","changed","join","options","map","option","displayValue","label","style","color","error","WrappedComponent","axios","_Component","_temp","_getPrototypeOf2","_this","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","state","closeBackdrop","setState","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","errormsg","data","errors","message","react__WEBPACK_IMPORTED_MODULE_5___default","_Components_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_7__","_Components_EditProfileModal_EditProfileModal__WEBPACK_IMPORTED_MODULE_6__","Component","module","exports","p","userProfile","react_default","src","photo","alt","name","email","date","token","userId","profileUserId","react_router_dom","to","Button","type","click","viewBackdrop","followUser","disabled","followButtonClicked","followed","UserProf","signal","CancelToken","source","viewModal","imageSelected","editprofileForm","placeholder","valid","validationRules","required","emailValid","password","minLength","confirm_password","passwordMatch","Photo","formIsValid","file","user","buttonClicked","changeInput","event","inputType","objectSpread","stateElement","target","files","URL","createObjectURL","checkValidity","rules","isValid","trim","test","editProfileForm","onGoToPost","post","cancel","localStorage","setItem","JSON","stringify","history","pathname","_id","postId","editProfile","preventDefault","prevState","formData","FormData","append","put","headers","Content-Type","Authorization","then","filePath","path","filepath","requestBody","query","variables","id","match","params","result","updatedUser","editUserProfile","userState","document","querySelector","backgroundColor","followers","filteredFollowers","filter","onGoTofollowerProfile","cancelToken","singleUser","followButton","input","checked","forEach","follower","_this3","elementArray","config","Spinner","Components_UserProfile_UserProfile","createdAt","bind","following","posts","title","Backdrop","CSSTransition","mountOnEnter","unmountOnExit","timeout","enter","exit","in","classNames","enterActive","exitActive","EditProfileModal","Form","ErrorComponent","connect","auth"],"mappings":"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","file":"static/js/7.029baef2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './EditProfileModal.css';\r\n\r\nconst profileModal = props => {\r\n    return (\r\n        <div className=\"profileModal\">{props.children}</div>\r\n    )\r\n};\r\n\r\nexport default profileModal;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => {\r\n    return props.show ? <div className='backdrop' onClick={props.clicked}>{props.children}</div> : null;\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst form = props => {\r\n    let element = null;\r\n    let errorMessage;\r\n    const classes = []\r\n    if (props.touched && props.invalid) {\r\n        classes.push('invalid');\r\n        errorMessage = props.errorMessage\r\n    }\r\n\r\n    if (props.touched && !props.invalid && !props.invalidN) {\r\n        classes.push('valid');\r\n        errorMessage = ''\r\n    }\r\n\r\n    if (props.touched && props.invalidN) {\r\n        classes.push('invalid-newpost');\r\n        errorMessage = props.errorMessage\r\n    }\r\n\r\n    if (props.touched && !props.invalidN && !props.invalid) {\r\n        classes.push('valid-newpost');\r\n        errorMessage = ''\r\n    }\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            element = (\r\n                <>\r\n                <input value={props.value}\r\n                       {...props.elementConfig}\r\n                       onChange={props.changed}\r\n                       className= {classes.join(' ')}/>\r\n                </>\r\n            )\r\n            break;\r\n        case 'textarea':\r\n            element = (\r\n                <>\r\n                    <textarea {...props.elementConfig}\r\n                              onChange={props.changed}\r\n                              className={classes.join(' ')}\r\n                              value={props.value}></textarea>\r\n                </>\r\n            )\r\n            break;\r\n        case 'select':\r\n            element = (\r\n                <select value={props.value} onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => {\r\n                        return (\r\n                            <option value={option.value}>\r\n                                {option.displayValue}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            element = (\r\n                <input value={props.value}\r\n                        {...props.elementConfig}\r\n                        onChange={props.changed} />\r\n            )\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n            <label>{props.label}</label>\r\n            {element}\r\n            <p style={{color: 'red'}}>{errorMessage}</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default form;","import React, {Component} from 'react';\r\nimport Modal from '../Components/EditProfileModal/EditProfileModal';\r\nimport Backdrop from '../Components/Backdrop/Backdrop';\r\nimport './Error.css';\r\n\r\nconst error = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => {\r\n                return res;\r\n            }, err => {\r\n                this.setState({error: err});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        closeBackdrop = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            let errormsg;\r\n            if (this.state.error) {\r\n                errormsg = this.state.error.response.data.errors[0].message;\r\n            } else {\r\n                errormsg = null;\r\n            }\r\n            return (\r\n                <>\r\n                <Backdrop show={this.state.error} clicked={this.closeBackdrop}>\r\n                    <Modal>\r\n                        <div className=\"error\">\r\n                            <h1>An Error Occurred</h1>\r\n                            <div className=\"editProfile__icon\" onClick={this.closeBackdrop}>\r\n                                <i className=\"fas fa-times-circle\"></i>\r\n                            </div>\r\n                            <p>{errormsg}</p>\r\n                        </div>\r\n                    </Modal>\r\n                </Backdrop>\r\n                <WrappedComponent {...this.props} />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default error;","module.exports = __webpack_public_path__ + \"static/media/avatar.b23d5960.jpg\";","import React from 'react';\r\nimport './UserProfile.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../Button/Button';\r\nimport UserImage from '../../assets/avatar.jpg';\r\n\r\nconst userProfile = props => {\r\n    return (\r\n        <div className=\"userProfile__user-flex\">\r\n            <div className=\"userProfile__user-flex__photo\">\r\n                <img src={props.photo} alt=\"user\" />\r\n            </div>\r\n            <div className=\"userProfile__user-flex__details\">\r\n                <p>Name: <span>{props.name}</span></p>\r\n                <p>Email: <span>{props.email}</span></p>\r\n                <p>Joined: <span>{props.date}</span></p>\r\n                <div className=\"userProfile__user-flex__details__buttons-flex\">\r\n                    {props.token\r\n                     ?\r\n                        props.userId === props.profileUserId\r\n                         ?\r\n                         <>\r\n                         <div className=\"userProfile__user-flex__details__buttons-flex__link\">\r\n                            <Link to=\"/newpost\">Create Post</Link>\r\n                        </div>\r\n                        <div className=\"userProfile__user-flex__details__buttons-flex__link\">\r\n                            <Button type=\"button\" click={props.viewBackdrop}>Edit Profile</Button>\r\n                        </div>\r\n                        </>\r\n                         :\r\n                         null\r\n                     :\r\n                     null}\r\n                     {props.token && props.userId !== props.profileUserId\r\n                      ?\r\n                      <div className=\"userProfile__user-flex__details__buttons-flex__link\">\r\n                        <Button type=\"button\" click={props.followUser} disabled={props.followButtonClicked}>\r\n                            <input type=\"checkbox\" className=\"followInput\" />\r\n                            <i className=\"fas fa-plus\"></i> {props.followed ? 'Unfollow' : 'Follow'}\r\n                        </Button>\r\n                      </div>\r\n                      :\r\n                      null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default userProfile;","import React, {Component} from 'react';\r\nimport Backdrop from '../../Components/Backdrop/Backdrop';\r\nimport EditProfileModal from '../../Components/EditProfileModal/EditProfileModal';\r\nimport './UserProfile.css';\r\nimport Button from '../../Components/Button/Button';\r\nimport Input from '../../Components/Form/Form';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport ProfilePage from '../../Components/UserProfile/UserProfile';\r\nimport axios from 'axios';\r\nimport Spinner from '../../Components/Spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport ErrorComponent from '../../hoc/Error';\r\n\r\nclass UserProf extends Component {\r\n\r\n    signal = axios.CancelToken.source();\r\n    state = {\r\n        viewBackdrop: false,\r\n        viewModal: false,\r\n        imageSelected: null,\r\n        editprofileForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Type Your Name Here',\r\n                    type: 'text',\r\n                    name: 'name',\r\n                    label: 'Name'\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                validationRules: {\r\n                    required: true\r\n                },\r\n                touched: false,\r\n                errorMessage: 'This Field is Required!'\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Type Your Email Here',\r\n                    type: 'email',\r\n                    name: 'email',\r\n                    label: 'Email',\r\n                    \r\n                },\r\n                value: '',\r\n                valid: false,\r\n                validationRules: {\r\n                    required: true,\r\n                    emailValid: true\r\n                },\r\n                touched: false,\r\n                errorMessage: 'Invalid Email'\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Type Your Password Here',\r\n                    type: 'password',\r\n                    name: 'password',\r\n                    label: 'Password'\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                validationRules: {\r\n                    required: true,\r\n                    minLength: true\r\n                },\r\n                touched: false,\r\n                errorMessage: 'Password should have at least 8 characters'\r\n            },\r\n            confirm_password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Confirm Your Password',\r\n                    type: 'password',\r\n                    name: 'confirmpassword',\r\n                    label: 'Confirm Password'\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                validationRules: {\r\n                    required: true,\r\n                    passwordMatch: true\r\n                },\r\n                touched: false,\r\n                errorMessage: 'Passwords Do Not Match'\r\n            },\r\n            Photo: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'file',\r\n                    name: 'image',\r\n                    label: 'Pick Your Profile Photo'\r\n                },\r\n                validationRules: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: true,\r\n                errorMessage: ''\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        file: null,\r\n        user: null,\r\n        buttonClicked: false,\r\n        followed: false,\r\n        followButtonClicked: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const requestBody = {\r\n            query: `\r\n                query SingleUser($userId: String!) {\r\n                    singleUser(userId: $userId) {\r\n                        _id\r\n                        name\r\n                        email\r\n                        photo\r\n                        createdAt\r\n                        posts {\r\n                            _id\r\n                            title\r\n                            likes {\r\n                                _id\r\n                                name\r\n                            }\r\n                        }\r\n                        followers {\r\n                            _id\r\n                            name\r\n                        }\r\n                        following {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                userId: this.props.match.params.id\r\n            }\r\n        };\r\n        return axios.post('/graphql', requestBody, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            cancelToken: this.signal.token\r\n        }).then(result => {\r\n            const userProfile = result.data.data.singleUser;\r\n            this.setState({user: userProfile});\r\n            userProfile.followers.forEach(follower => {\r\n                if (follower._id === this.props.userId) {\r\n                    this.setState({followed: true});\r\n                    const followButton = document.querySelector('.userProfile__user-flex__details__buttons-flex__link button');\r\n                    const input = document.querySelector('input[class=\"followInput\"]');\r\n                    input.checked = true;\r\n                    followButton.style.backgroundColor = 'green';\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.signal.cancel('cancelled');\r\n    }\r\n\r\n    changeInput = (event, inputType) => {\r\n        const editprofileForm = {...this.state.editprofileForm};\r\n        const stateElement = editprofileForm[inputType];\r\n        if (inputType === 'Photo') {\r\n            const file = event.target.files[0];\r\n            this.setState({file: file, imageSelected: URL.createObjectURL(file)});\r\n        }\r\n        stateElement.value = event.target.value;\r\n        stateElement.touched = true;\r\n        if (inputType === 'password') {\r\n            editprofileForm['confirm_password'].value = '';\r\n            editprofileForm['confirm_password'].valid = false;\r\n        }\r\n        if (inputType === 'confirm_password') {\r\n            if (stateElement.value === editprofileForm['password'].value) {\r\n                stateElement.valid = true;\r\n            } else {\r\n                stateElement.valid = false;\r\n            }\r\n        } else {\r\n            stateElement.valid = this.checkValidity(stateElement.validationRules, stateElement.value);\r\n        }\r\n        editprofileForm[inputType] = stateElement;\r\n\r\n        let formIsValid = true;\r\n        for (let key in editprofileForm) {\r\n            formIsValid = editprofileForm[key].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({editprofileForm: editprofileForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    checkValidity = (rules, value) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.emailValid) {\r\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = re.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= 8 && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    viewBackdrop = () => {\r\n        const form = {...this.state.editprofileForm};\r\n        const name = form['name'];\r\n        name.value = this.state.user.name;\r\n        name.valid = true;\r\n        form['name'] = name;\r\n\r\n        const email = form['email'];\r\n        email.value = this.state.user.email;\r\n        email.valid = true;\r\n        form['email'] = email;\r\n\r\n        return this.setState({viewBackdrop: true, viewModal: true, editProfileForm: form, imageSelected: this.state.user.photo});\r\n    }\r\n\r\n    closeBackdrop = () => {\r\n        this.setState({viewBackdrop: false, viewModal: false});\r\n    }\r\n\r\n    onGoToPost = (post) => {\r\n        this.signal.cancel('cancelled');\r\n        localStorage.setItem('post', JSON.stringify(post));\r\n        this.props.history.push({\r\n            pathname: '/post/' + post._id,\r\n            postId: post._id\r\n        });\r\n    }\r\n\r\n    editProfile = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            return {\r\n                editProfileForm: {\r\n                    ...prevState.editProfileForm,\r\n                    photo: {\r\n                        ...prevState.editProfileForm.photo,\r\n                        value: ''\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        this.setState({buttonClicked: true});\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        return axios.put('/insertupdatePostImage', formData, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.props.token\r\n            }\r\n        }).then(filePath => {\r\n            const filepath = filePath.data.filePath;\r\n            let path;\r\n            if (filepath === 'notFound') {\r\n                path = this.state.user.photo;\r\n            } else {\r\n                path = filepath;\r\n            }\r\n            const requestBody = {\r\n                query: `\r\n                    mutation EditUserProfile($id: String!, $name: String!, $email: String!, $password: String, $photo: String!) {\r\n                        editUserProfile(editProfileInput: {\r\n                            id: $id,\r\n                            name: $name,\r\n                            email: $email,\r\n                            password: $password,\r\n                            photo: $photo\r\n                          }) {\r\n                            _id\r\n                            name\r\n                            email\r\n                            photo\r\n                            createdAt\r\n                            posts {\r\n                                _id\r\n                                title\r\n                            }\r\n                          }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    id: this.props.match.params.id,\r\n                    name: this.state.editprofileForm.name.value,\r\n                    email: this.state.editprofileForm.email.value,\r\n                    password: this.state.editprofileForm.password.value,\r\n                    photo: path\r\n                }\r\n            }\r\n            return axios.post('/graphql', requestBody, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.props.token\r\n                }\r\n            }).then(result => {\r\n                const updatedUser = result.data.data.editUserProfile;\r\n                const userState = {...this.state.user};\r\n                userState.email = updatedUser.email;\r\n                userState.password = updatedUser.password;\r\n                userState.name = updatedUser.name;\r\n                userState.photo = path;\r\n                this.setState({buttonClicked: false, viewBackdrop: false, viewModal: false, user: userState})\r\n            })\r\n        })\r\n    }\r\n\r\n    followUser = () => {\r\n        this.setState({followButtonClicked: true});\r\n        let requestBody;\r\n        if (!this.state.followed) {\r\n            requestBody = {\r\n                query: `\r\n                    mutation FollowUser($userId: String!) {\r\n                        followUser(userId: $userId) {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    userId: this.state.user._id\r\n                }\r\n            };\r\n        } else {\r\n            requestBody = {\r\n                query: `\r\n                    mutation UnfollowUser($userId: String!) {\r\n                        unFollowUser(userId: $userId) {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    userId: this.state.user._id\r\n                }\r\n            };\r\n        }\r\n\r\n        return axios.post('/graphql', requestBody, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.props.token\r\n            }\r\n        }).then(result => {\r\n            this.setState({followButtonClicked: false})\r\n            if (result.data.data.followUser) {\r\n                this.setState({followed: true});\r\n                const followButton = document.querySelector('.userProfile__user-flex__details__buttons-flex__link button');\r\n                followButton.style.backgroundColor = 'green';\r\n                const userState = {...this.state.user};\r\n                userState.followers.push(result.data.data.followUser)\r\n                this.setState({user: userState});\r\n            } else {\r\n                this.setState({followed: false});\r\n                const followButton = document.querySelector('.userProfile__user-flex__details__buttons-flex__link button');\r\n                followButton.style.backgroundColor = '#05386B';\r\n                const userState = {...this.state.user};\r\n                const filteredFollowers = userState.followers.filter(p => {\r\n                    return p._id !== this.props.userId\r\n                })\r\n                userState.followers = filteredFollowers;\r\n                this.setState({user: userState});\r\n            }\r\n        })\r\n    }\r\n\r\n    onGoTofollowerProfile = (id) => {\r\n        this.props.history.push('/userprofile/' + id);\r\n        const requestBody = {\r\n            query: `\r\n                query SingleUser($userId: String!) {\r\n                    singleUser(userId: $userId) {\r\n                        _id\r\n                        name\r\n                        email\r\n                        photo\r\n                        createdAt\r\n                        posts {\r\n                            _id\r\n                            title\r\n                            likes {\r\n                                _id\r\n                                name\r\n                            }\r\n                        }\r\n                        followers {\r\n                            _id\r\n                            name\r\n                        }\r\n                        following {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                userId: id\r\n            }\r\n        };\r\n        return axios.post('/graphql', requestBody, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            cancelToken: this.signal.token\r\n        }).then(result => {\r\n            const userProfile = result.data.data.singleUser;\r\n            if (userProfile.followers.length <= 0) {\r\n                this.setState({followed: false});\r\n                const followButton = document.querySelector('.userProfile__user-flex__details__buttons-flex__link button');\r\n                const input = document.querySelector('input[class=\"followInput\"]');\r\n                if (input) {\r\n                    input.checked = false;\r\n                    followButton.style.backgroundColor = '#05386B';\r\n                }\r\n            }\r\n            this.setState({user: userProfile});\r\n            userProfile.followers.forEach(follower => {\r\n                if (follower._id === this.props.userId) {\r\n                    this.setState({followed: true});\r\n                    const followButton = document.querySelector('.userProfile__user-flex__details__buttons-flex__link button');\r\n                    followButton.style.backgroundColor = 'green';\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let elementArray = [];\r\n        for (let key in this.state.editprofileForm) {\r\n            elementArray.push({\r\n                id: key,\r\n                config: this.state.editprofileForm[key]\r\n            });\r\n        }\r\n        const {user} = this.state;\r\n        if (user === null) {\r\n            return <Spinner />\r\n        }\r\n        return (\r\n            <div className=\"userProfile\">\r\n            <h1>Profile</h1>\r\n            <ProfilePage        viewBackdrop={this.viewBackdrop}\r\n                                photo={this.state.user.photo}\r\n                                name={this.state.user.name}\r\n                                email={this.state.user.email}\r\n                                date={this.state.user.createdAt}\r\n                                token={this.props.token}\r\n                                userId={this.props.userId}\r\n                                profileUserId={this.state.user._id}\r\n                                followUser={this.followUser}\r\n                                followed={this.state.followed}\r\n                                followButtonClicked={this.state.followButtonClicked} />\r\n                    <hr />\r\n            <div className=\"userProfile__userActivities-flex\">\r\n                <div className=\"userProfile__userActivities-flex__activity\">\r\n                    <span>{this.state.user.followers.length}</span> Followers\r\n                    <hr />\r\n                    <ul>\r\n                        {this.state.user.followers.map(follower => {\r\n                            return (                                \r\n                                <li key={follower._id}>\r\n                                    <span onClick={this.onGoTofollowerProfile.bind(this, follower._id)}>{follower.name}</span>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"userProfile__userActivities-flex__activity\">\r\n                    <span>{this.state.user.following.length}</span> Following\r\n                    <hr />\r\n                    <ul>\r\n                    {this.state.user.following.map(follower => {\r\n                        return (                                \r\n                            <li key={follower._id}>\r\n                                <span onClick={this.onGoTofollowerProfile.bind(this, follower._id)}>{follower.name}</span>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"userProfile__userActivities-flex__activity\">\r\n                    <span>{this.state.user.posts.length}</span> Posts\r\n                    <hr />\r\n                    <ul>\r\n                        {this.state.user.posts.map(post => {\r\n                            return (\r\n                                <li key={post._id}>\r\n                                    <span onClick={this.onGoToPost.bind(this, post)}>{post.title}</span>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <Backdrop show={this.state.viewBackdrop} />\r\n            <CSSTransition mountOnEnter\r\n                           unmountOnExit\r\n                           timeout={{\r\n                               enter: 1000,\r\n                               exit: 500\r\n                           }}\r\n                           in={this.state.viewModal}\r\n                           classNames={{\r\n                               enter: '',\r\n                               enterActive: 'ModalOpen',\r\n                               exit: '',\r\n                               exitActive: 'ModalClose'\r\n                           }}>\r\n                <EditProfileModal viewModal={this.state.viewModal}>\r\n                    <h1>Edit Your Profile</h1>\r\n                    <div className=\"editProfile__icon\" onClick={this.closeBackdrop}>\r\n                        <i className=\"fas fa-times-circle\"></i>\r\n                    </div>\r\n                    <form className=\"editProfile__form\">\r\n                        {elementArray.map(element => {\r\n                                return (\r\n                                    <div key={element.id}>\r\n                                        <Input elementType={element.config.elementType}\r\n                                            elementConfig={element.config.elementConfig}\r\n                                            value={element.config.value}\r\n                                            invalidN={!element.config.valid}\r\n                                            touched={element.config.touched}\r\n                                            label={element.config.label}\r\n                                            key={element.id}\r\n                                            changed={(event) => this.changeInput(event, element.id)}\r\n                                            errorMessage={element.config.errorMessage} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            {this.state.imageSelected\r\n                             ?\r\n                             <img src={this.state.imageSelected} alt=\"profileImage\" />\r\n                             :\r\n                             null}\r\n                            <Button type=\"submit\" disabled={!this.state.formIsValid || this.state.buttonClicked} click={this.editProfile}>Edit Profile</Button>\r\n                    </form>\r\n                </EditProfileModal>\r\n            </CSSTransition>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nexport default ErrorComponent(connect(mapStateToProps)(UserProf), axios);"],"sourceRoot":""}
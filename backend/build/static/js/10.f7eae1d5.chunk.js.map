{"version":3,"sources":["Components/EditProfileModal/EditProfileModal.js","Components/Backdrop/Backdrop.js","Components/Form/Form.js","hoc/Error.js","Containers/NewPost/NewPost.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","profileModal","props","a","createElement","className","children","backdrop","show","onClick","clicked","form","errorMessage","element","classes","touched","invalid","push","invalidN","elementType","Fragment","Object","assign","value","elementConfig","onChange","changed","join","options","map","option","displayValue","label","style","color","error","WrappedComponent","axios","_Component","_temp","_getPrototypeOf2","_this","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","state","closeBackdrop","setState","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","errormsg","data","errors","message","react__WEBPACK_IMPORTED_MODULE_5___default","_Components_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_7__","_Components_EditProfileModal_EditProfileModal__WEBPACK_IMPORTED_MODULE_6__","Component","dbPromise","idb","db","objectStoreNames","contains","createObjectStore","keyPath","NewPost","signal","CancelToken","source","showSnackbar","newPostForm","title","placeholder","type","name","validationRules","required","maxLength","valid","body","postPhoto","formIsValid","imageSelected","buttonClicked","file","changeInput","event","inputType","E_omar_programming_portofolioooo_blog_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","stateElement","target","files","URL","createObjectURL","checkValidity","rules","isValid","trim","emailValid","test","sendNewPostToDB","preventDefault","formData","FormData","append","put","headers","Content-Type","Authorization","token","then","path","filepath","filePath","requestBody","query","variables","photo","post","cancelToken","result","newpost","createPost","navigator","serviceWorker","ready","reg","active","postMessage","JSON","stringify","postId","_id","userId","user","postTitle","userName","history","catch","createNewPost","onLine","window","sw","st","newPost","ObjectID","toHexString","transaction","objectStore","complete","sync","register","console","log","configurePushSub","cancel","elementArray","id","config","react__WEBPACK_IMPORTED_MODULE_6___default","encType","react_js_snackbar__WEBPACK_IMPORTED_MODULE_15__","Icon","Show","_Components_Form_Form__WEBPACK_IMPORTED_MODULE_9__","src","alt","_Components_Button_Button__WEBPACK_IMPORTED_MODULE_8__","click","disabled","ErrorComponent","connect","auth"],"mappings":"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","file":"static/js/10.f7eae1d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './EditProfileModal.css';\r\n\r\nconst profileModal = props => {\r\n    return (\r\n        <div className=\"profileModal\">{props.children}</div>\r\n    )\r\n};\r\n\r\nexport default profileModal;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => {\r\n    return props.show ? <div className='backdrop' onClick={props.clicked}>{props.children}</div> : null;\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst form = props => {\r\n    let element = null;\r\n    let errorMessage;\r\n    const classes = []\r\n    if (props.touched && props.invalid) {\r\n        classes.push('invalid');\r\n        errorMessage = props.errorMessage\r\n    }\r\n\r\n    if (props.touched && !props.invalid && !props.invalidN) {\r\n        classes.push('valid');\r\n        errorMessage = ''\r\n    }\r\n\r\n    if (props.touched && props.invalidN) {\r\n        classes.push('invalid-newpost');\r\n        errorMessage = props.errorMessage\r\n    }\r\n\r\n    if (props.touched && !props.invalidN && !props.invalid) {\r\n        classes.push('valid-newpost');\r\n        errorMessage = ''\r\n    }\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            element = (\r\n                <>\r\n                <input value={props.value}\r\n                       {...props.elementConfig}\r\n                       onChange={props.changed}\r\n                       className= {classes.join(' ')}/>\r\n                </>\r\n            )\r\n            break;\r\n        case 'textarea':\r\n            element = (\r\n                <>\r\n                    <textarea {...props.elementConfig}\r\n                              onChange={props.changed}\r\n                              className={classes.join(' ')}\r\n                              value={props.value}></textarea>\r\n                </>\r\n            )\r\n            break;\r\n        case 'select':\r\n            element = (\r\n                <select value={props.value} onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => {\r\n                        return (\r\n                            <option value={option.value}>\r\n                                {option.displayValue}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            element = (\r\n                <input value={props.value}\r\n                        {...props.elementConfig}\r\n                        onChange={props.changed} />\r\n            )\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n            <label>{props.label}</label>\r\n            {element}\r\n            <p style={{color: 'red'}}>{errorMessage}</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default form;","import React, {Component} from 'react';\r\nimport Modal from '../Components/EditProfileModal/EditProfileModal';\r\nimport Backdrop from '../Components/Backdrop/Backdrop';\r\nimport './Error.css';\r\n\r\nconst error = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => {\r\n                return res;\r\n            }, err => {\r\n                this.setState({error: err});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        closeBackdrop = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            let errormsg;\r\n            if (this.state.error) {\r\n                errormsg = this.state.error.response.data.errors[0].message;\r\n            } else {\r\n                errormsg = null;\r\n            }\r\n            return (\r\n                <>\r\n                <Backdrop show={this.state.error} clicked={this.closeBackdrop}>\r\n                    <Modal>\r\n                        <div className=\"error\">\r\n                            <h1>An Error Occurred</h1>\r\n                            <div className=\"editProfile__icon\" onClick={this.closeBackdrop}>\r\n                                <i className=\"fas fa-times-circle\"></i>\r\n                            </div>\r\n                            <p>{errormsg}</p>\r\n                        </div>\r\n                    </Modal>\r\n                </Backdrop>\r\n                <WrappedComponent {...this.props} />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default error;","import React, {Component} from 'react';\r\nimport './NewPost.css';\r\nimport Button from '../../Components/Button/Button';\r\nimport Input from '../../Components/Form/Form';\r\nimport axios from 'axios';\r\nimport ErrorComponent from '../../hoc/Error';\r\nimport {connect} from 'react-redux';\r\nimport * as idb from 'idb';\r\nimport { ObjectID } from 'bson';\r\nimport ReactSnackBar from \"react-js-snackbar\";\r\n\r\nconst dbPromise = idb.openDB('allPosts', 1, (db) => {\r\n    if (!db.objectStoreNames.contains('posts')) {\r\n        db.createObjectStore('posts', {keyPath: '_id'});\r\n    }\r\n\r\n    if (!db.objectStoreNames.contains('users')) {\r\n        db.createObjectStore('users', {keyPath: '_id'});\r\n    }\r\n\r\n    if (!db.objectStoreNames.contains('sync-posts')) {\r\n        db.createObjectStore('sync-posts', {keyPath: '_id'});\r\n    }\r\n});\r\n\r\nfunction createData(st, data) {\r\n    return dbPromise.then(db => {\r\n        var transaction = db.transaction(st, 'readwrite');\r\n        var store = transaction.objectStore(st);\r\n        store.put(data);\r\n        return transaction.complete;\r\n    });\r\n}\r\n\r\nclass NewPost extends Component {\r\n    signal = axios.CancelToken.source();\r\n    state = {\r\n        showSnackbar: false,\r\n        newPostForm: {\r\n            title: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'title of your post',\r\n                    type: 'text',\r\n                    name: 'title'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    maxLength: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: '',\r\n                label: 'Title',\r\n                errorMessage: 'Characters should be between 1 and 30'\r\n            },\r\n            body: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    placeholder: 'Body of your post',\r\n                    type: 'text',\r\n                    name: 'body'\r\n                },\r\n                validationRules: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: '',\r\n                label: 'Body',\r\n                errorMessage: 'This Field Is Required'\r\n            },\r\n            postPhoto: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'file',\r\n                    name: 'image'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: '',\r\n                label: 'Image Of Your Post',\r\n                errorMessage: 'This Field Is Required'\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        imageSelected: null,\r\n        buttonClicked: false,\r\n        file: null\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.signal.cancel('cancel');\r\n    }\r\n\r\n    changeInput = (event, inputType) => {\r\n        const newPostForm = {...this.state.newPostForm};\r\n        const stateElement = newPostForm[inputType];\r\n        if (inputType === 'postPhoto' && event.target.files[0]) {\r\n            const file = event.target.files[0];\r\n            this.setState({imageSelected: URL.createObjectURL(file), file: file});\r\n        }\r\n        stateElement.value = event.target.value;\r\n        stateElement.touched = true;\r\n        stateElement.valid = this.checkValidity(stateElement.validationRules, stateElement.value);\r\n        newPostForm[inputType] = stateElement;\r\n\r\n        let formIsValid = true;\r\n        for (let key in newPostForm) {\r\n            formIsValid = newPostForm[key].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({newPostForm: newPostForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    checkValidity = (rules, value) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.emailValid) {\r\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = re.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= 30 && isValid;\r\n        }\r\n\r\n        return isValid;\r\n\r\n    }\r\n\r\n    //sync new post when offline\r\n\r\n    sendNewPostToDB = (event) => {\r\n        event.preventDefault();\r\n        this.setState({buttonClicked: true, showSnackbar: true});\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        return axios.put('/insertPostImage', formData, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.props.token\r\n            }\r\n        }).then(path => {\r\n            const filepath = path.data.filePath;\r\n            const requestBody = {\r\n                query: `\r\n                    mutation CreatePost($title: String!, $body: String!, $photo: String!) {\r\n                        createPost(postInput: {title: $title, body: $body, photo: $photo}) {\r\n                            _id\r\n                            title\r\n                            body\r\n                            photo\r\n                            user {\r\n                              _id\r\n                              name\r\n                              email\r\n                              createdAt\r\n                              updatedAt\r\n                            }\r\n                          }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    title: this.state.newPostForm.title.value,\r\n                    body: this.state.newPostForm.body.value,\r\n                    photo: filepath\r\n                }\r\n            };\r\n    \r\n            return axios.post('/graphql', requestBody, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.props.token\r\n                },\r\n                cancelToken: this.signal.token\r\n            }).then(result => {\r\n                const newpost = result.data.data.createPost;\r\n                navigator.serviceWorker.ready.then(reg => {\r\n                    reg.active.postMessage(JSON.stringify({\r\n                        postId: newpost._id,\r\n                        userId: newpost.user._id,\r\n                        postTitle: newpost.title,\r\n                        postPhoto: newpost.photo,\r\n                        userName: newpost.user.name\r\n                    }));\r\n                });\r\n                // if (Notification.permission === 'granted') {\r\n                //     this.configurePushSub(newpost.user._id, newpost.title, newpost.photo, newpost.user.name);\r\n                // }\r\n                this.setState({showSnackbar: false});\r\n                this.props.history.push('/posts');\r\n            })\r\n            .catch(err => {\r\n                this.setState({buttonClicked: false});\r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({buttonClicked: false});\r\n        });\r\n    }\r\n\r\n    createNewPost = (event) => {\r\n        if (navigator.onLine) {\r\n            this.sendNewPostToDB(event);\r\n        } else {\r\n            event.preventDefault();\r\n            this.setState({buttonClicked: true});\r\n            if ('serviceWorker' in navigator && 'SyncManager' in window) {\r\n                navigator.serviceWorker.ready.then(sw => {\r\n                    // sw.active.postMessage(JSON.stringify({\r\n                    //     userId: this.props.userId,\r\n                    //     postTitle: this.state.newPostForm.title.value,\r\n                    //     postPhoto: postPhoto,\r\n                    //     userName: userName\r\n                    // }));\r\n                    const newPost = {\r\n                        _id: new ObjectID().toHexString(),\r\n                        title: this.state.newPostForm.title.value,\r\n                        body: this.state.newPostForm.body.value,\r\n                        photo: this.state.file,\r\n                        token: this.props.token,\r\n                        userId: this.props.userId\r\n                    };\r\n                    createData('sync-posts', newPost).then(() => {\r\n                        return sw.sync.register('sync-new-posts');\r\n                    })\r\n                    .then(() => {\r\n                        this.setState({showSnackbar: true});\r\n                    })\r\n                    .then(() => {\r\n                        this.props.history.push('/posts');\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    configurePushSub = () => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let elementArray = [];\r\n        for (let key in this.state.newPostForm) {\r\n            elementArray.push({\r\n                id: key,\r\n                config: this.state.newPostForm[key]\r\n            });\r\n        }\r\n        return (\r\n            <div className=\"newPost\">\r\n                <h1>Create New Post</h1>\r\n                <form className=\"newPost__form\" encType=\"multipart/form-data\">\r\n                    {elementArray.map(element => {\r\n                        return (\r\n                            <>\r\n                            <ReactSnackBar Icon={<i className=\"fas fa-alarm-clock\"></i>} Show={this.state.showSnackbar}>\r\n                                Creating Your Post...\r\n                            </ReactSnackBar>\r\n                            <div key={element.id}>\r\n                                <Input elementType={element.config.elementType}\r\n                                      elementConfig={element.config.elementConfig}\r\n                                      value={element.config.value}\r\n                                      invalidN={!element.config.valid}\r\n                                      touched={element.config.touched}\r\n                                      label={element.config.label}\r\n                                      key={element.id}\r\n                                      changed={(event) => this.changeInput(event, element.id)}\r\n                                      errorMessage={element.config.errorMessage} />\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                            {this.state.imageSelected\r\n                             ?\r\n                             <div className=\"imageSelected\">\r\n                                <img src={this.state.imageSelected} alt=\"sdknflsd\" />\r\n                             </div>\r\n                             :\r\n                             null\r\n                            }\r\n                    <Button type=\"submit\" click={(event) => this.createNewPost(event)} disabled={!this.state.formIsValid || this.state.buttonClicked}>Create Post</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nexport default ErrorComponent(connect(mapStateToProps)(NewPost), axios);"],"sourceRoot":""}